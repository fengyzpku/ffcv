Search.setIndex({"docnames": ["api/decoders", "api/fields", "api/loader", "api/transforms", "api/writer", "api_reference", "basics", "benchmarks", "bottleneck_doctor", "examples", "ffcv_examples/cifar10", "ffcv_examples/custom_transforms", "ffcv_examples/imagenet", "ffcv_examples/linear_regression", "ffcv_examples/transform_with_inds", "index", "making_dataloaders", "parameter_tuning", "performance_guide", "quickstart", "working_with_images", "writing_datasets"], "filenames": ["api/decoders.rst", "api/fields.rst", "api/loader.rst", "api/transforms.rst", "api/writer.rst", "api_reference.rst", "basics.rst", "benchmarks.rst", "bottleneck_doctor.rst", "examples.rst", "ffcv_examples/cifar10.rst", "ffcv_examples/custom_transforms.rst", "ffcv_examples/imagenet.rst", "ffcv_examples/linear_regression.rst", "ffcv_examples/transform_with_inds.rst", "index.rst", "making_dataloaders.rst", "parameter_tuning.rst", "performance_guide.rst", "quickstart.rst", "working_with_images.rst", "writing_datasets.rst"], "titles": ["ffcv.fields.decoders module", "ffcv.fields module", "ffcv.loader module", "ffcv.transforms module", "ffcv.writer module", "API Reference", "Getting started", "ImageNet Benchmarks", "The Bottleneck Doctor", "Examples", "Training CIFAR-10 in 36 seconds on a single A100", "Fast custom image transforms", "ImageNet Fast Training", "Large-Scale Linear Regression", "Custom transforms with indices", "Welcome to FFCV\u2019s documentation!", "Making an FFCV dataloader", "Tuning Guide", "Performance Guide", "Quickstart", "Working with Image Data in FFCV", "Writing a dataset to FFCV format"], "terms": {"class": [0, 1, 2, 3, 4, 10, 11, 13, 14, 16, 17, 20, 21], "floatdecod": [0, 5, 15, 16], "sourc": [0, 1, 2, 3, 4, 7, 10, 21], "float": [0, 1, 3, 21], "point": [0, 1, 3, 11], "scalar": [0, 1, 21], "float64": [0, 1], "dtype": [0, 1, 3, 5, 11, 13, 15, 21], "intdecod": [0, 5, 10, 15, 19], "sign": 0, "integ": [0, 1], "int64": 0, "ndarraydecod": [0, 5, 13, 15, 16], "default": [0, 1, 2, 3, 7, 8, 16, 20, 21], "ndarrayfield": [0, 1, 5, 13, 15, 21], "declare_state_and_memori": [0, 3, 5, 11, 14, 15], "previous_st": [0, 3, 11, 14], "state": [0, 3, 14], "tupl": [0, 1, 3, 10, 11, 14, 21], "allocationqueri": [0, 3, 11, 14], "generate_cod": [0, 2, 3, 5, 11, 14, 15], "callabl": [0, 2, 3, 4, 11, 14], "randomresizedcroprgbimagedecod": [0, 5, 15, 19, 20], "output_s": 0, "scale": [0, 3, 7, 9, 10, 12, 15, 16, 18, 21], "0": [0, 1, 3, 10, 11, 13, 14, 16, 19, 20], "08": 0, "1": [0, 2, 3, 4, 7, 11, 13, 16, 18, 20], "ratio": [0, 3, 20], "75": [0, 7], "3333333333333333": 0, "rgbimagefield": [0, 1, 5, 10, 11, 15, 16, 19, 20, 21], "perform": [0, 7, 8, 11, 13, 15, 16, 17, 20, 21], "random": [0, 1, 2, 3, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21], "crop": [0, 3, 7, 8, 19], "resiz": [0, 1, 3, 7, 8, 19, 20, 21], "oper": [0, 1, 2, 3, 10, 11, 13, 14, 16, 17, 20], "It": [0, 1, 10, 11, 13, 16, 17, 20], "support": [0, 1, 4, 8, 17, 20, 21], "both": [0, 1, 3, 8, 10, 11, 17, 19, 20, 21], "variabl": [0, 1, 13, 21], "constant": 0, "resolut": [0, 7, 16, 20], "dataset": [0, 1, 2, 4, 6, 8, 11, 14, 15, 18, 19], "paramet": [0, 1, 2, 3, 4, 13, 17, 20, 21], "int": [0, 1, 2, 3, 4, 10, 21], "The": [0, 1, 3, 7, 9, 11, 13, 15, 16, 17, 18, 20, 21], "desir": [0, 3, 8], "imag": [0, 1, 3, 7, 8, 9, 10, 14, 15, 16, 18, 19, 21], "rang": [0, 10, 11, 13, 19, 20], "possibl": [0, 1, 2, 13, 14, 17], "area": [0, 3, 20], "than": [0, 1, 7, 11, 15, 16, 17, 20], "can": [0, 1, 2, 3, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21], "randomli": [0, 3, 8, 11, 20], "sampl": [0, 1, 3, 4, 8, 16, 17, 21], "potenti": [0, 1, 21], "aspect": [0, 3, 15, 20], "properti": [0, 1, 11, 14, 17], "get_crop_gener": [0, 5, 15], "centercroprgbimagedecod": [0, 5, 15, 20], "center": 0, "follow": [0, 3, 8, 11, 13, 15, 16, 17, 20, 21], "size": [0, 1, 2, 3, 4, 8, 10, 11, 15, 16, 17, 19, 20], "min": [0, 15], "side": [0, 1, 3, 8, 20], "length": [0, 1, 3, 8, 20, 21], "simplergbimagedecod": [0, 5, 10, 11, 15, 16, 20], "most": [0, 7, 8, 11, 16, 18, 20, 21], "basic": [0, 15], "onli": [0, 2, 7, 8, 11, 13, 16, 17, 21], "simpli": [0, 1, 20, 21], "read": [0, 1, 2, 4, 11, 13, 15, 16, 17, 18, 20, 21], "decompress": 0, "pass": [0, 1, 2, 11, 13, 17, 19, 20, 21], "i": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 20, 21], "bytesdecod": [0, 5, 15], "defin": [1, 2, 10, 21], "type": [1, 2, 3, 8, 10, 11, 19], "storag": [1, 7, 8, 17, 20], "method": [1, 11, 13], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 19, 20, 21], "attribut": [1, 11], "train": [1, 2, 6, 8, 9, 11, 14, 15, 16, 18, 19, 21], "see": [1, 2, 4, 8, 10, 11, 12, 13, 15, 16, 19, 20, 21], "write": [1, 4, 6, 8, 10, 11, 13, 15, 16, 18, 19], "format": [1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 15, 19, 20], "make": [1, 6, 7, 8, 10, 11, 13, 14, 15, 17, 20, 21], "an": [1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 17, 20, 21], "dataload": [1, 6, 7, 10, 11, 13, 15, 17, 19, 21], "guid": [1, 8, 11, 13, 15, 16, 19, 20], "inform": [1, 2, 6, 15, 20], "usag": [1, 4, 8, 15, 16, 20], "abstract": 1, "base": [1, 2, 8, 13, 15, 17, 20], "implement": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 21], "e": [1, 2, 4, 7, 8, 11, 15, 16], "g": [1, 2, 4, 8, 15, 16], "entri": [1, 2, 16], "compris": [1, 4], "one": [1, 2, 6, 7, 15, 16, 17, 21], "more": [1, 2, 6, 7, 8, 10, 12, 15, 17, 18, 19, 20], "exampl": [1, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21], "standard": [1, 2, 3, 7, 8, 10, 13, 14, 16], "object": [1, 4, 11, 16, 21], "detect": 1, "mai": [1, 11, 13, 17, 20], "have": [1, 3, 8, 11, 15, 16, 17, 20, 21], "bound": [1, 3, 7], "box": 1, "ar": [1, 2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 20, 21], "respons": [1, 13, 20, 21], "encod": [1, 5, 7, 15, 16, 21], "get_decoder_class": [1, 5, 15], "function": [1, 2, 8, 14, 17, 21], "determin": [1, 16], "how": [1, 7, 9, 10, 11, 12, 13, 15, 16, 18, 20, 21], "thei": [1, 2, 11, 14, 16, 17, 20, 21], "written": [1, 15, 16, 21], "from": [1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21], "file": [1, 2, 4, 7, 10, 12, 16, 20, 21], "respect": 1, "multipl": [1, 2, 7, 8, 15, 16, 18], "decod": [1, 2, 4, 5, 8, 10, 13, 15, 16, 19, 21], "given": [1, 3, 4, 7, 11, 13, 20, 21], "user": [1, 13, 15, 17, 20, 21], "specifi": [1, 3, 4, 8, 11, 16, 20, 21], "which": [1, 2, 3, 7, 11, 13, 15, 16, 17, 20, 21], "us": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21], "piplin": 1, "argument": [1, 8, 11, 14, 16, 20], "loader": [1, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 19, 20, 21], "here": [1, 7, 10, 11, 13, 14, 17, 19, 21], "subclass": [1, 11, 16], "metadata_typ": [1, 4, 5, 15], "static": 1, "from_binari": [1, 5, 15], "binari": 1, "arg_typ": 1, "to_binari": [1, 5, 15], "metadata_destin": 1, "malloc": 1, "bytesfield": [1, 5, 15, 21], "A": [1, 7, 16, 21], "byte": [1, 21], "arrai": [1, 3, 11, 13, 21], "intend": [1, 20], "data": [1, 2, 3, 6, 8, 9, 11, 13, 15, 16, 17, 18, 19, 21], "text": 1, "raw": [1, 3, 7, 8, 15, 20], "fix": [1, 13, 14, 17], "sequenti": [1, 2, 5, 10, 15, 16], "while": [1, 2, 7, 8, 11, 17, 20], "save": [1, 8, 11, 13], "pointer": [1, 11], "lookup": 1, "writer": [1, 5, 8, 10, 11, 13, 15, 19, 20, 21], "expect": [1, 2, 13, 21], "1d": 1, "uint8": [1, 3, 21], "numpi": [1, 3, 10, 11, 13, 21], "f0": 1, "u1": 1, "1024": 1, "destin": 1, "intfield": [1, 5, 10, 11, 15, 19, 20, 21], "valu": [1, 2, 3, 16, 17, 20], "floatfield": [1, 5, 13, 15, 21], "write_mod": [1, 20], "max_resolut": [1, 19, 20], "option": [1, 2, 3, 4, 6, 7, 8, 10, 11, 14, 15, 17, 18, 19, 21], "none": [1, 2, 4, 13, 14, 16], "smart_threshold": [1, 20], "jpeg_qual": [1, 19, 20], "90": [1, 7], "compress_prob": [1, 20], "5": [1, 3, 10], "rgb": [1, 3], "str": [1, 2, 4], "should": [1, 3, 11, 13, 16, 17, 21], "either": [1, 8, 11, 15], "pixel": [1, 3, 8], "jpg": [1, 20, 21], "compress": [1, 15, 20, 21], "jpeg": [1, 7, 8, 15, 20, 21], "smart": [1, 20], "decid": [1, 11], "between": [1, 3, 7, 15, 17, 20, 21], "proport": [1, 7, 20], "subset": [1, 2, 4, 16], "By": [1, 15], "If": [1, 3, 8, 15, 16, 17], "maximum": [1, 11], "equal": [1, 15], "thi": [1, 2, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21], "befor": [1, 7, 10, 20], "when": [1, 2, 3, 7, 8, 10, 16, 20], "would": [1, 7, 11, 13, 21], "take": [1, 7, 11, 13, 15, 16, 17, 19, 20, 21], "time": [1, 7, 8, 10, 11, 13, 16, 17, 19, 20], "instead": [1, 2, 7, 8, 21], "qualiti": [1, 7, 8, 17, 20], "ignor": 1, "unless": [1, 17], "latter": 1, "case": [1, 3, 7, 16, 17, 18, 21], "probabl": [1, 3, 20], "shape": [1, 10, 11, 13, 14, 16, 21], "multi": [1, 18], "dimension": 1, "matric": 1, "ani": [1, 2, 3, 8, 10, 11, 13, 15, 16, 19, 21], "jsonfield": [1, 5, 15, 21], "json": [1, 21], "dict": [1, 21], "compat": 1, "specif": [1, 7, 11, 15, 16, 18, 20], "becaus": [1, 8, 14, 17], "tensor": [1, 3, 11, 13, 16, 21], "ndarrai": [1, 3, 21], "reader": 1, "therefor": 1, "t": [1, 2, 8, 11, 13, 14, 15, 17], "give": [1, 17, 18], "return": [1, 10, 11, 13, 14, 16, 21], "why": 1, "we": [1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21], "provid": [1, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 20, 21], "unpack": [1, 5, 15], "doe": [1, 8, 11, 16], "convers": [1, 3, 4, 16, 21], "": [1, 4, 7, 8, 10, 11, 13, 16, 17, 21], "up": [1, 3, 7, 8, 11, 15, 16], "call": [1, 4, 7, 17, 21], "main": [1, 13, 17], "bodi": 1, "loop": [1, 11, 13, 16], "batch": [1, 2, 3, 11, 14, 16, 20], "convert": [1, 3, 5, 6, 10, 15, 16, 19, 21], "back": [1, 7, 16], "output": [1, 3, 11, 13, 19], "produc": [1, 20], "actual": [1, 2, 11], "work": [1, 3, 6, 7, 8, 11, 15, 17, 18], "entir": [1, 8, 12, 13, 16, 17, 20], "python": [1, 8, 11, 15, 21], "singl": [1, 7, 8, 9, 11, 13, 15, 16, 17, 20], "fname": [2, 4], "batch_siz": [2, 10, 11, 13, 16, 19, 20], "num_work": [2, 4, 10, 11, 13, 16, 17, 19, 20, 21], "os_cach": [2, 8, 13, 16, 17], "bool": [2, 3, 4], "true": [2, 3, 10, 11, 13, 14, 16, 17], "order": [2, 4, 6, 7, 8, 10, 11, 13, 17, 19, 21], "union": 2, "traversal_ord": 2, "traversalord": 2, "liter": 2, "orderopt": [2, 5, 8, 10, 11, 13, 15, 16, 17, 19], "2": [2, 11, 13, 15, 16, 18], "distribut": [2, 8, 16, 17], "fals": [2, 4, 8, 10, 13, 16, 17], "seed": [2, 14, 16], "indic": [2, 3, 4, 9, 16], "sequenc": [2, 3, 16], "pipelin": [2, 4, 6, 7, 8, 10, 11, 13, 15, 19, 20, 21], "map": [2, 4, 8, 10, 18, 21], "torch": [2, 3, 10, 11, 13, 16, 19, 21], "nn": [2, 3, 10, 11, 16], "custom_field": [2, 16], "field": [2, 4, 5, 6, 10, 13, 15, 16, 19, 20], "drop_last": [2, 10, 11, 16], "batches_ahead": [2, 16], "3": [2, 11, 15, 21], "recompil": [2, 16], "drop": [2, 15, 16], "replac": [2, 3, 11, 13, 15, 17, 19], "pytorch": [2, 3, 4, 7, 8, 11, 14, 15, 16, 17, 19, 21], "full": [2, 13, 16, 20], "path": [2, 16, 19, 21], "locat": 2, "beton": [2, 4, 10, 11, 13, 16, 19, 20, 21], "number": [2, 3, 4, 7, 8, 11, 13, 15, 16], "worker": [2, 4, 16, 17, 21], "load": [2, 4, 8, 13, 15, 16, 17, 20, 21], "consid": [2, 8, 16, 17], "core": [2, 7, 13], "thread": [2, 8, 15, 17], "you": [2, 3, 8, 15, 16, 17, 20, 21], "jite": 2, "augment": [2, 3, 8, 10, 11, 14, 15, 16, 19], "usual": [2, 17, 20], "don": [2, 8, 14, 15], "benefit": 2, "hyper": 2, "leverag": [2, 17], "cach": [2, 7, 8, 13, 15, 16, 17, 20], "purpos": 2, "benefici": [2, 17, 20], "enough": [2, 16, 17, 20], "memori": [2, 8, 14, 15, 16, 17], "process": [2, 4, 7, 8, 11, 15, 16, 17, 21], "same": [2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 20], "machin": [2, 8, 9, 11, 12, 15, 16, 17, 20], "http": [2, 3, 4, 15], "doc": [2, 4], "io": [2, 4], "performance_guid": 2, "html": [2, 4], "travers": [2, 17], "seqeunti": 2, "quasi_random": [2, 5, 8, 13, 15, 16, 17], "tri": [2, 8], "uniform": [2, 13, 17], "minim": [2, 8, 13, 15, 17], "amount": [2, 7, 16, 17], "disk": [2, 13, 15, 18], "note": [2, 8, 10, 11, 13, 15, 17, 20], "mostli": [2, 17, 20], "current": [2, 17, 20], "unavail": 2, "mode": [2, 7], "For": [2, 7, 10, 11, 15, 16, 17, 20, 21], "gpu": [2, 3, 7, 10, 11, 13, 15, 16, 18], "emul": 2, "behavior": [2, 16, 20], "distributedsampl": [2, 17], "filter": [2, 5, 15], "some": [2, 7, 8, 11, 15, 16, 17], "dictionari": [2, 16, 21], "transform": [2, 5, 8, 9, 10, 13, 15, 19, 20], "appli": [2, 3, 7, 13, 16, 17, 20], "miss": 2, "consist": [2, 7, 10], "totensor": [2, 3, 5, 10, 11, 13, 15, 16, 19], "also": [2, 7, 8, 10, 11, 13, 14, 15, 16, 17, 20, 21], "disabl": [2, 13, 17], "explicitli": [2, 16], "its": [2, 9, 13, 17, 20, 21], "dictonari": 2, "associ": [2, 21], "custom": [2, 8, 9, 10, 15, 16, 21], "non": [2, 16], "iter": [2, 16], "prepar": [2, 4, 5, 15, 16], "advanc": [2, 15, 16, 17], "balanc": 2, "latenc": 2, "everi": [2, 11, 14, 16], "necessari": [2, 10, 14, 16, 17], "chang": [2, 3, 11, 15, 16, 19], "dure": [2, 4], "next_traversal_ord": [2, 5, 15], "field_nam": [2, 4], "condit": [2, 7], "generate_function_cal": [2, 5, 15], "pipeline_nam": 2, "op_id": 2, "needs_indic": 2, "generate_stage_cod": [2, 5, 15], "stage": [2, 11], "stage_ix": 2, "enumer": 2, "todevic": [3, 5, 10, 13, 15, 16, 19], "devic": [3, 11, 13, 15], "non_block": [3, 10, 16], "move": [3, 8], "asynchron": [3, 8, 15, 17], "copi": 3, "cpu": [3, 10, 11, 13, 17, 18, 20], "totorchimag": [3, 5, 10, 15, 16, 19], "channels_last": [3, 10], "convert_back_int16": 3, "b": [3, 11, 13, 19], "x": [3, 10, 13, 16, 20, 21], "c": [3, 11, 15], "h": [3, 11, 20], "w": [3, 11, 13, 20], "float16": [3, 10, 16], "normalizeimag": [3, 5, 15], "mean": [3, 8, 13, 15, 16], "std": [3, 16], "fast": [3, 8, 9, 15, 16, 20, 21], "normal": [3, 8, 10, 13, 16, 17], "np": [3, 10, 11, 13, 14, 21], "vector": [3, 13, 16, 21], "deviat": 3, "result": [3, 13, 17, 20], "equival": 3, "generate_code_gpu": [3, 5, 15], "generate_code_cpu": [3, 5, 15], "target_dtyp": 3, "target": 3, "squeez": [3, 5, 10, 13, 15], "dim": [3, 13], "remov": [3, 7, 15], "dimens": [3, 13], "input": [3, 8, 13, 21], "list": [3, 4, 7, 8, 10, 16, 21], "view": [3, 5, 10, 15], "randomresizedcrop": [3, 5, 15, 20], "portion": 3, "lower": [3, 7, 8], "upper": 3, "randomhorizontalflip": [3, 5, 10, 15, 16], "flip_prob": 3, "flip": [3, 7, 10], "horizont": [3, 7, 10], "randomtransl": [3, 5, 10, 15, 16], "pad": [3, 10, 16], "fill": 3, "translat": [3, 10], "vertic": 3, "direct": 3, "max": 3, "color": 3, "outsid": 3, "shift": 3, "cutout": [3, 5, 10, 15, 16, 19], "crop_siz": 3, "arxiv": 3, "org": 3, "ab": 3, "1708": 3, "04552": 3, "squar": [3, 13], "cut": [3, 11], "out": [3, 8, 10, 15, 17, 18], "layer": [3, 17], "set": [3, 7, 8, 10, 14, 15, 16, 17], "zero": [3, 13], "post": [3, 11], "imagemixup": [3, 5, 15], "alpha": 3, "same_lambda": 3, "mixup": 3, "whether": [3, 11, 16], "lambda": 3, "across": 3, "whole": [3, 16], "individu": [3, 7], "per": [3, 11, 13, 15, 18], "labelmixup": [3, 5, 15], "label": [3, 10, 11, 13, 14, 16, 19, 20, 21], "initi": [3, 13, 16, 20], "exactli": 3, "wai": [3, 8, 11, 13, 15, 16], "cla": 3, "mixuptoonehot": [3, 5, 15], "num_class": [3, 10], "poison": [3, 5, 15], "mask": 3, "clamp": 3, "255": [3, 10], "ad": [3, 11, 16], "opac": 3, "final": [3, 4, 5, 9, 10, 15, 16], "two": [3, 6, 7, 9, 11, 16, 17, 21], "replacelabel": [3, 5, 15], "new_label": 3, "relabel": 3, "new": [3, 11], "assign": [3, 11, 14], "modulewrapp": [3, 5, 15], "from_shard": [4, 5, 15], "shard": [4, 21], "count_samples_in_shard": [4, 5, 15], "handle_sampl": [4, 5, 15], "dest_ix": 4, "metadata": 4, "alloc": [4, 8, 14], "worker_job_webdataset": [4, 5, 15], "input_queu": 4, "metadata_sm": 4, "done_numb": 4, "allocations_queu": 4, "worker_job_indexed_dataset": [4, 5, 15], "datasetwrit": [4, 5, 8, 10, 11, 13, 15, 19, 20, 21], "page_s": 4, "8388608": 4, "index": [4, 6, 11, 14, 15, 19], "webdataset": [4, 6, 7, 17, 19], "name": [4, 10, 11], "store": [4, 7, 8, 10, 11, 15, 20, 21], "kei": [4, 16, 21], "matter": [4, 17], "page": [4, 8, 15, 20], "intern": [4, 21], "from_indexed_dataset": [4, 5, 10, 11, 13, 15, 19, 21], "chunksiz": 4, "100": [4, 7, 8, 10, 11, 21], "shuffle_indic": 4, "writing_dataset": 4, "__getitem__": [4, 10, 13, 21], "__len__": [4, 13, 21], "chunk": 4, "shuffl": [4, 13, 16, 17], "from_webdataset": [4, 5, 15, 21], "like": [4, 7, 8, 11, 16, 20], "folder": [4, 21], "similar": [4, 7, 16, 17, 20, 21], "ffcv": [5, 6, 7, 8, 9, 11, 12, 14, 17, 18, 19], "modul": [5, 10, 11, 15, 16], "just": [6, 11, 13, 15, 16, 17, 19, 21], "requir": [6, 7, 8, 11, 16, 17, 18, 19, 20, 21], "step": [6, 13, 15, 16, 21], "exist": [6, 7, 8, 15, 16], "In": [6, 7, 10, 11, 13, 16, 17, 18, 20, 21], "section": [6, 13, 15, 18, 20, 21], "ll": [6, 10, 11, 13, 16, 18, 20, 21], "go": [6, 18], "over": [6, 11, 13, 16, 17], "scratch": 6, "complet": [6, 7, 15, 17], "readi": [6, 10, 16, 21], "put": [6, 10, 11, 17], "togeth": [6, 8, 11, 21], "other": [6, 8, 10, 11, 17, 19, 20, 21], "our": [7, 10, 11, 13, 15, 16, 21], "system": [7, 8, 15, 17, 18, 19, 20], "cover": [7, 9], "As": [7, 11, 12, 13, 17], "demonstr": 7, "below": [7, 11, 14, 15, 16, 21], "significantli": [7, 13, 15, 17, 20], "outperform": 7, "dali": 7, "being": [7, 8, 11], "much": [7, 8, 16, 17], "easier": 7, "extend": [7, 10], "idea": [7, 13], "influenc": 7, "gener": [7, 11, 17, 18, 20, 21], "variou": [7, 20], "present": [7, 16], "detail": [7, 10, 12, 13, 15, 18, 19, 20], "about": [7, 15, 18, 20], "pleas": 7, "refer": [7, 16], "vari": 7, "three": [7, 16], "mix": [7, 20], "four": 7, "256px": 7, "384px": 7, "512px": 7, "1600px": 7, "50": [7, 10, 20], "9": [7, 10, 15], "23": 7, "gb": 7, "16": [7, 11, 13, 21], "14": 7, "26": 7, "35": [7, 15], "30": 7, "22": 7, "01": 7, "40": [7, 21], "31": 7, "65": 7, "47": 7, "74": 7, "98": [7, 15], "57": 7, "00": 7, "110": 7, "21": 7, "176": 7, "198": 7, "53": 7, "49": 7, "59": 7, "102": 7, "29": 7, "173": 7, "92": [7, 10], "221": 7, "76": 7, "58": 7, "36": [7, 9, 15, 16], "124": 7, "202": 7, "04": [7, 11], "251": 7, "66": 7, "84": 7, "91": 7, "43": 7, "285": 7, "67": 7, "350": 7, "72": 7, "n": [7, 13, 15, 21], "169": 7, "79": 7, "371": 7, "20": 7, "616": 7, "18": 7, "788": 7, "97": 7, "next": [7, 9, 10, 20], "measur": 7, "abov": [7, 10, 11, 13, 14, 15, 16, 17, 20, 21], "ram": [7, 13, 15, 16, 17, 20], "simul": 7, "where": [7, 11, 16, 21], "smaller": 7, "avail": [7, 15, 16, 21], "eb": 7, "network": [7, 8, 15, 16], "attach": 7, "drive": [7, 8], "aw": [7, 15], "worst": 7, "scenario": [7, 8, 18], "encount": [7, 17], "larg": [7, 9, 10, 15, 16, 18, 20, 21], "too": [7, 8, 16, 17], "big": 7, "even": [7, 8, 13, 21], "local": 7, "compar": 7, "against": 7, "platform": 7, "come": [7, 8], "librari": [7, 15, 17], "pre": [7, 8, 15, 16, 17], "aggreg": 7, "tar": 7, "archiv": 7, "develop": [7, 17], "nvidia": [7, 10, 17], "experi": [7, 17], "instanti": [7, 16], "code": [7, 8, 10, 11, 15, 16, 17, 19, 20], "found": [7, 15], "deeplearningexampl": 7, "repositori": [7, 9, 12, 21], "dgx": 7, "configur": [7, 20], "all": [7, 8, 15, 16, 17, 20, 21], "model": [7, 8, 9, 12, 15, 16, 18], "optim": [7, 13, 15, 17, 18, 19], "framework": 7, "throughput": [7, 8, 15, 19], "sec": 7, "512": [7, 10, 11], "31278": 7, "256": [7, 10, 19, 20], "172801": 7, "1956": 7, "16631": 7, "6870": 7, "were": 7, "run": [7, 8, 11, 13, 16, 17], "p3dn": 7, "24xlarg": 7, "instanc": [7, 11, 16], "fair": 7, "comparison": 7, "baselin": 7, "evalu": 7, "similarli": [7, 8, 17], "224x224": 7, "px": 7, "resnet": [7, 10], "plot": 7, "accuraci": [7, 10], "obtain": 7, "faster": [7, 8, 11, 13, 15, 20], "test": [7, 10, 11, 14], "wa": [7, 16], "p4d": 7, "8": [7, 10, 11, 13], "a100": [7, 9, 13, 15, 16], "warm": 7, "distinct": 7, "8xa100": 7, "parallel": [7, 8, 11], "1xa100": 7, "To": [7, 8, 11, 17], "realist": 7, "mimic": [7, 20], "cluster": 7, "onc": [7, 8, 17], "separ": 7, "Such": [7, 21], "situat": [7, 17], "highli": 7, "relev": 7, "task": [7, 8, 11, 17, 20], "grid": [7, 18], "search": [7, 15, 18], "find": 7, "confid": 7, "interv": 7, "popular": 7, "epoch": [7, 10, 11, 13, 14, 16, 17, 19], "after": [7, 16, 21], "warmup": 7, "extrapol": 7, "long": [7, 16], "schedul": [7, 10, 15, 17], "took": 7, "hub": 7, "assum": [7, 16, 17, 20, 21], "origin": [7, 11, 17], "paper": 7, "120": 7, "modifi": 7, "add": [7, 10, 16], "half": [7, 11], "precis": 7, "via": [7, 13, 20], "nativeamp": 7, "lightn": 7, "anoth": [7, 8, 14], "import": [7, 10, 11, 13, 16, 19, 21], "line": [7, 15, 19], "46": 7, "ddp": 7, "acceler": [7, 8, 12, 19], "correct": [7, 13], "lift": [7, 16], "websit": 7, "timm": 7, "a3": 7, "strike": 7, "4": [7, 11, 16, 20], "v100": 7, "so": [7, 8, 11, 13, 14, 15, 16, 17, 20, 21], "perfect": [7, 17], "divid": 7, "report": 7, "15": [7, 20], "hour": 7, "twice": 7, "slow": 7, "summar": 8, "tune": [8, 13, 15, 18, 19], "help": [8, 11, 15, 17], "get": [8, 11, 14, 15, 18, 19], "your": [8, 15, 16, 17, 18, 19, 20, 21], "what": [8, 11, 15, 16, 17], "sit": 8, "idl": 8, "low": [8, 11, 14], "mayb": 8, "re": [8, 10, 20], "mani": [8, 20], "try": [8, 13, 17], "fit": [8, 13, 15, 16, 17, 20], "o": [8, 15, 16, 17, 21], "level": [8, 15, 17], "enabl": [8, 15, 17], "ensur": [8, 15, 20], "concurr": [8, 15, 17], "execut": 8, "properli": 8, "exploit": 8, "construct": [8, 10, 11, 16, 21], "avoid": [8, 15, 17, 21], "especi": 8, "quasi": 8, "sampler": 8, "constructor": 8, "imit": 8, "underli": [8, 13, 15, 17], "again": 8, "yet": [8, 17], "comput": [8, 11, 15, 17, 20], "vision": [8, 15, 20], "gigant": 8, "end": [8, 15], "anywai": [8, 17], "pai": 8, "cost": 8, "giant": 8, "them": [8, 11, 15, 16, 17, 21], "appropri": 8, "first": [8, 9, 10, 11, 13, 16, 17, 19, 20, 21], "place": [8, 11, 13], "space": [8, 11, 20], "serial": [8, 11], "decreas": [8, 16], "still": [8, 13, 17, 21], "hit": 8, "maxim": 8, "made": [8, 11], "jit": 8, "compil": [8, 11, 14, 15, 16], "pin": 8, "fuse": [8, 15], "runtim": [8, 16], "altern": [8, 13, 20], "own": [8, 16, 17], "among": 8, "ones": [8, 15, 20], "effici": [8, 15, 16, 17, 20], "simpl": [8, 10, 13, 15, 17, 21], "soon": 8, "tutori": [8, 10, 13, 16, 21], "allow": [8, 12, 13, 17, 20, 21], "smoothli": 8, "trade": [8, 15, 20], "off": [8, 15, 20], "workload": 8, "fraction": 8, "transfer": [8, 15], "alwai": [8, 11], "includ": [8, 11, 15, 16, 18, 21], "tool": [8, 15], "unblock": 8, "fulli": [8, 15], "unlik": [8, 13, 17], "differ": [8, 10, 15, 16, 17, 20], "won": 8, "block": [8, 11, 20], "offload": 8, "offer": [8, 15, 17, 20], "extrem": [8, 15, 18], "often": [8, 20], "part": [8, 16], "handl": [8, 15, 21], "induc": 8, "slowdown": 8, "isn": [8, 17], "freed": 8, "intens": [8, 16], "matrix": 8, "limit": [8, 21], "check": [8, 11], "speed": [8, 9, 10, 15, 16, 17, 20], "learn": [9, 10, 12, 15, 19, 20], "illustr": [9, 21], "eas": 9, "well": [9, 15, 16, 17, 20], "signific": [9, 20], "gain": 9, "self": [9, 10, 11, 12, 13, 14, 16, 21], "contain": [9, 11, 12, 14, 20], "imagenet": [9, 15, 20, 21], "quickli": [9, 12], "accur": [9, 12], "cifar": [9, 11, 15, 16, 21], "10": [9, 13, 14, 15, 16, 20, 21], "second": [9, 13, 15, 16, 21], "linear": [9, 10, 15, 16, 21], "regress": [9, 10, 15, 16, 21], "show": [10, 16, 21], "classifi": 10, "6": [10, 13, 21], "correspond": [10, 11, 13, 14, 16, 21], "script": [10, 11, 13, 14, 21], "walkthrough": 10, "compon": 10, "ch": [10, 13, 16], "torchvis": [10, 11, 15, 16, 20], "common": [10, 17, 18], "cifar10": [10, 11], "tmp": [10, 11, 13], "download": [10, 11], "d": [10, 11, 13, 19, 21], "item": [10, 11, 13], "f": [10, 11, 13], "cifar_": 10, "statist": [10, 16], "wrt": 10, "uin8": 10, "cifar_mean": 10, "125": 10, "307": 10, "122": 10, "961": 10, "113": 10, "8575": 10, "cifar_std": 10, "51": 10, "5865": 10, "847": 10, "label_pipelin": [10, 19], "cuda": [10, 13, 16, 17], "image_pipelin": [10, 11, 16, 19], "done": [10, 11, 21], "kakaobrain": 10, "mul": 10, "def": [10, 11, 13, 14, 16, 21], "__init__": [10, 16, 21], "weight": [10, 13], "super": [10, 16], "forward": [10, 16, 17, 20], "flatten": 10, "residu": [10, 13], "conv_bn": 10, "channels_in": 10, "channels_out": 10, "kernel_s": 10, "stride": 10, "group": 10, "conv2d": 10, "bia": 10, "batchnorm2d": 10, "relu": 10, "inplac": 10, "64": 10, "128": 10, "maxpool2d": 10, "adaptivemaxpool2d": 10, "memory_format": 10, "hyperparamet": 10, "sgd": [10, 13], "cross": 10, "entropi": 10, "loss": [10, 13], "smooth": 10, "cyclic": 10, "rate": 10, "triangular": 10, "amp": 10, "gradscal": 10, "autocast": 10, "crossentropyloss": 10, "lr_schedul": 10, "24": 10, "opt": 10, "lr": [10, 13], "momentum": [10, 15], "weight_decai": 10, "5e": [10, 13], "iters_per_epoch": 10, "50000": 10, "interp": 10, "arang": 10, "lambdalr": 10, "scaler": 10, "loss_fn": 10, "label_smooth": 10, "tqdm": [10, 13], "ep": 10, "im": [10, 11], "lab": [10, 11, 14], "zero_grad": 10, "set_to_non": 10, "backward": 10, "updat": [10, 11, 13, 14], "eval": 10, "no_grad": 10, "total_correct": 10, "total_num": 10, "fliplr": 10, "argmax": 10, "eq": 10, "sum": [10, 13], "print": [10, 11, 13], "1f": 10, "document": [11, 21], "outlin": 11, "build": 11, "form": 11, "preprocess": 11, "strongli": 11, "recommend": [11, 17, 18], "without": [11, 15, 16], "anyth": [11, 20], "concern": 11, "sinc": [11, 13, 14, 16, 17, 21], "numba": [11, 15], "pickacorn": 11, "top": [11, 16], "left": 11, "bottom": 11, "right": [11, 21], "quadrant": 11, "do": [11, 13, 15, 16, 17, 20], "abstractmethod": 11, "rais": [11, 13], "notimplementederror": 11, "mention": 11, "earlier": 11, "chain": 11, "keep": [11, 13, 15, 16], "track": 11, "now": [11, 13, 15, 21], "think": [11, 15], "addit": [11, 16], "info": [11, 15], "thu": [11, 13, 16], "accomplish": [11, 13], "itself": [11, 13, 15], "need": [11, 16, 17, 20, 21], "rest": [11, 13, 19, 20], "program": [11, 13], "good": [11, 17], "look": [11, 15], "allocation_queri": 11, "dataclass": 11, "insid": 11, "maybebrighten": 11, "new_shap": 11, "everyth": [11, 21], "stai": 11, "immut": 11, "edit": 11, "new_stat": 11, "ask": [11, 14], "whose": 11, "width": 11, "height": 11, "mem_alloc": 11, "tell": [11, 16], "downstream": 11, "factori": 11, "That": [11, 13, 21], "previou": [11, 13, 16, 17], "queri": 11, "third": [11, 14], "datapoint": 11, "within": [11, 14], "let": [11, 13, 15, 20], "realli": 11, "worri": 11, "pick_a_corn": 11, "dst": [11, 14], "which_corn": 11, "randint": [11, 14], "high": [11, 14], "els": 11, "did": 11, "care": 11, "littl": [11, 13, 17], "start_tim": [11, 13], "_": [11, 13, 14], "4f": 11, "06596": 11, "32": 11, "02828": 11, "ok": 11, "around": [11, 17], "5x": 11, "slower": [11, 13, 17], "thankfulli": 11, "suboptim": 11, "obviou": 11, "start": [11, 13, 15, 16, 17, 19, 21], "howev": [11, 21], "parallel_rang": [11, 14], "get_iter": [11, 14], "is_parallel": [11, 14], "dissect": 11, "counterpart": [11, 21], "flag": [11, 17], "With": [11, 13, 15], "03404": 11, "02703": 11, "great": 11, "ve": [11, 16, 20], "overhead": [11, 15, 16, 17], "abound": 11, "007": 11, "6x": 11, "improv": [11, 13, 17], "briefli": 11, "At": 11, "act": 11, "cannot": 11, "rather": [11, 15], "familiar": [11, 20], "datatyp": 11, "meanwhil": 11, "depend": [11, 13, 16], "irrelev": 11, "otherwis": [11, 15], "jit_mod": 11, "boolean": 11, "larger": [12, 20], "u": [12, 13, 15], "readm": 12, "md": 12, "link": 12, "regular": [13, 17], "definit": 13, "doesn": [13, 17], "bare": [13, 16], "independ": 13, "known": 13, "covari": [13, 16, 21], "nois": [13, 16], "product": 13, "000": 13, "40gb": 13, "1000000": 13, "10000": 13, "rand": [13, 14], "astyp": [13, 21], "float32": [13, 21], "ground": 13, "truth": 13, "y": [13, 15, 21], "randn": [13, 21], "pkl": 13, "dump": 13, "open": 13, "linreg_data": 13, "wb": 13, "goal": 13, "recov": 13, "train_load": 13, "todo": 13, "calcul": 13, "varianc": 13, "calculate_stat": 13, "stdev": 13, "x_batch": 13, "pow": 13, "sqrt": 13, "w_est": 13, "b_est": 13, "guess": 13, "num_epoch": 13, "total_loss": 13, "num_exampl": 13, "y_batch": 13, "stabil": 13, "gradient": 13, "w_grad": 13, "b_grad": 13, "ipdb": 13, "set_trac": 13, "averag": 13, "3f": 13, "norm": 13, "diff": 13, "total": [13, 20], "2f": 13, "vanilla": 13, "descent": 13, "solv": 13, "typic": 13, "veri": [13, 17, 20, 21], "bad": 13, "better": [13, 17], "serv": [13, 16], "algorithm": [13, 15], "conjug": 13, "reduc": [13, 16, 17, 20], "said": 13, "exact": 13, "principl": 13, "clean": 13, "remain": [13, 21], "unspecifi": [13, 16], "built": [13, 21], "util": [13, 19, 21], "rb": 13, "runnabl": 13, "kept": 13, "environ": 13, "rewrit": 13, "linearregressiondataset": [13, 21], "idx": [13, 21], "len": [13, 21], "2048": 13, "substitut": 13, "goe": 13, "increas": [13, 15, 16], "dramat": [13, 15, 20], "longer": 13, "bottleneck": [13, 15, 18, 20], "elsewher": 13, "conclud": 13, "suggest": [13, 17], "few": [13, 15, 19, 20], "footprint": 13, "event": 13, "insuffici": 13, "error": [13, 21], "segment": 13, "fault": 13, "becom": 13, "discuss": [13, 16], "didn": 13, "explor": 13, "nearli": 13, "invalu": 14, "featur": 14, "with_indic": 14, "corrupt_fix": 14, "access": [14, 15, 17, 20, 21], "corrupt": 14, "throughout": 14, "corruptfixedlabel": 14, "ind": 14, "ti": 14, "05": 14, "determinist": 14, "No": 14, "extra": 14, "homepag": 15, "github": [15, 21], "instal": 15, "conda": 15, "creat": [15, 16, 17], "cupi": 15, "pkg": 15, "config": 15, "libjpeg": 15, "turbo": 15, "opencv": 15, "cudatoolkit": 15, "11": 15, "forg": 15, "activ": 15, "pip": 15, "dockerfil": 15, "minut": 15, "your_dataset": 15, "really_fast": 15, "way_less": 15, "speedup": 15, "benchmark": 15, "further": 15, "glanc": 15, "walk": 15, "through": [15, 16], "quickstart": 15, "doctor": [15, 18, 20], "varieti": [15, 21], "resourc": [15, 17, 18, 20], "constrain": 15, "ha": [15, 16, 17, 20, 21], "account": 15, "adapt": 15, "plug": 15, "plai": 15, "focus": 15, "turn": 15, "problem": 15, "everywher": 15, "neural": [15, 16], "introduc": 15, "swap": 15, "feel": 15, "free": 15, "analyz": 15, "cutmix": 15, "dropout": 15, "etc": 15, "lot": 15, "beyond": [15, 21], "fact": [15, 16], "applic": [15, 16, 20], "bulk": 15, "infer": 15, "easi": [15, 16, 21], "pain": 15, "automat": [15, 16], "fetch": [15, 17], "easili": [15, 21], "advantag": 15, "abil": 15, "delai": 15, "ssd": [15, 20], "expos": 15, "friendli": 15, "adjust": 15, "thank": 15, "interleav": 15, "dedic": 15, "sort": 15, "mixtur": 15, "research": 15, "cite": 15, "misc": 15, "leclerc2022ffcv": 15, "author": 15, "guillaum": 15, "leclerc": 15, "andrew": 15, "ilya": 15, "logan": 15, "engstrom": 15, "sung": 15, "park": 15, "hadi": 15, "salman": 15, "aleksand": 15, "madri": 15, "titl": 15, "year": 15, "2022": 15, "howpublish": 15, "url": 15, "com": 15, "libffcv": 15, "commit": 15, "xxxxxxx": 15, "packag": 15, "know": [15, 17, 21], "sam": 15, "continu": 16, "been": [16, 17], "heavi": 16, "less": 16, "enum": 16, "truli": 16, "unshuffl": 16, "basi": 16, "perfectli": 16, "throw": 16, "except": [16, 17, 20], "bit": [16, 17, 18], "least": 16, "sever": 16, "ahead": [16, 17], "incom": 16, "match": [16, 21], "must": 16, "alreadi": [16, 20, 21], "opportun": 16, "seri": 16, "declar": 16, "bone": 16, "forc": 16, "There": 16, "These": 16, "gaussian": 16, "addgaussiannois": 16, "randn_lik": 16, "could": [16, 21], "colorjitt": 16, "summari": 16, "held": 16, "manag": 16, "last": 16, "absorb": 16, "variat": [16, 20], "sure": [16, 17, 21], "stall": 16, "param": 16, "But": 16, "api": [16, 20], "achiev": [17, 20], "best": [17, 20], "particular": 17, "coupl": [17, 18], "lucki": 17, "abl": [17, 21], "directli": [17, 21], "might": [17, 20], "margin": 17, "futur": 17, "mission": 17, "critic": 17, "maintain": 17, "wasn": 17, "suffici": [17, 20], "unfeas": 17, "caus": 17, "behav": 17, "switch": 17, "fine": [17, 18], "dataparallel": 17, "wrapper": 17, "agre": 17, "distributeddataparallel": 17, "relat": 17, "emphas": 17, "particularli": 17, "inde": 17, "share": 17, "overal": 17, "consumpt": 17, "technic": 17, "haven": 17, "invest": 17, "medium": 17, "term": 17, "roadmap": 17, "welcom": 17, "pull": 17, "request": 17, "encourag": 17, "sometim": 17, "fewer": 17, "ineffici": 17, "One": 17, "prefer": [17, 20], "job": 17, "bigger": 17, "solut": 17, "power": 17, "choic": 17, "hurt": 17, "mistak": 17, "secur": 17, "reason": 17, "mp": 17, "servic": 17, "never": 17, "experienc": 17, "cudnn": 17, "bug": 17, "seem": 17, "batchnorm": 17, "issu": 17, "lock": 17, "shouldn": 17, "impact": [17, 20], "distil": 18, "concept": 18, "scarcest": 18, "small": 18, "pair": 19, "my_dataset": [19, 21], "make_my_dataset": 19, "write_path": [19, 21], "Then": 19, "old": 19, "224": [19, 20], "valid": 19, "proce": 19, "ident": 19, "deploi": 19, "major": 20, "consum": 20, "wide": 20, "control": 20, "retriev": 20, "cater": 20, "project": 20, "hardwar": 20, "choos": 20, "scheme": 20, "quantiti": 20, "lossi": 20, "slightli": 20, "uncompress": 20, "entireti": 20, "yield": 20, "hybrid": 20, "who": 20, "wish": 20, "represent": 20, "suit": 20, "outlier": 20, "select": 20, "unnecessari": 20, "largest": 20, "pick": 20, "threshold": 20, "preserv": 20, "my_fil": 20, "roughli": 20, "25": 20, "popul": 20, "centercrop": 20, "other_image_field": 20, "kind": 21, "integr": 21, "remot": 21, "categori": 21, "addition": 21, "interfac": 21, "toi": 21, "element": 21, "later": 21, "version": 21, "collect": 21, "glob": 21, "my_shard": 21, "join": 21, "split": 21, "rgb8": 21, "to_tupl": 21, "png": 21, "cl": 21, "glue": 21, "review": 21}, "objects": {"ffcv": [[1, 0, 0, "-", "fields"], [2, 0, 0, "-", "loader"], [3, 0, 0, "-", "transforms"], [4, 0, 0, "-", "writer"]], "ffcv.fields": [[1, 1, 1, "", "BytesField"], [1, 1, 1, "", "Field"], [1, 1, 1, "", "FloatField"], [1, 1, 1, "", "IntField"], [1, 1, 1, "", "JSONField"], [1, 1, 1, "", "NDArrayField"], [1, 1, 1, "", "RGBImageField"], [0, 0, 0, "-", "decoders"]], "ffcv.fields.BytesField": [[1, 2, 1, "", "encode"], [1, 2, 1, "", "from_binary"], [1, 2, 1, "", "get_decoder_class"], [1, 3, 1, "", "metadata_type"], [1, 2, 1, "", "to_binary"]], "ffcv.fields.Field": [[1, 2, 1, "", "encode"], [1, 2, 1, "", "from_binary"], [1, 2, 1, "", "get_decoder_class"], [1, 3, 1, "", "metadata_type"], [1, 2, 1, "", "to_binary"]], "ffcv.fields.FloatField": [[1, 2, 1, "", "encode"], [1, 2, 1, "", "from_binary"], [1, 2, 1, "", "get_decoder_class"], [1, 3, 1, "", "metadata_type"], [1, 2, 1, "", "to_binary"]], "ffcv.fields.IntField": [[1, 2, 1, "", "encode"], [1, 2, 1, "", "from_binary"], [1, 2, 1, "", "get_decoder_class"], [1, 3, 1, "", "metadata_type"], [1, 2, 1, "", "to_binary"]], "ffcv.fields.JSONField": [[1, 2, 1, "", "encode"], [1, 3, 1, "", "metadata_type"], [1, 2, 1, "", "unpack"]], "ffcv.fields.NDArrayField": [[1, 2, 1, "", "encode"], [1, 2, 1, "", "from_binary"], [1, 2, 1, "", "get_decoder_class"], [1, 3, 1, "", "metadata_type"], [1, 2, 1, "", "to_binary"]], "ffcv.fields.RGBImageField": [[1, 2, 1, "", "encode"], [1, 2, 1, "", "from_binary"], [1, 2, 1, "", "get_decoder_class"], [1, 3, 1, "", "metadata_type"], [1, 2, 1, "", "to_binary"]], "ffcv.fields.decoders": [[0, 1, 1, "", "BytesDecoder"], [0, 1, 1, "", "CenterCropRGBImageDecoder"], [0, 1, 1, "", "FloatDecoder"], [0, 1, 1, "", "IntDecoder"], [0, 1, 1, "", "NDArrayDecoder"], [0, 1, 1, "", "RandomResizedCropRGBImageDecoder"], [0, 1, 1, "", "SimpleRGBImageDecoder"]], "ffcv.fields.decoders.BytesDecoder": [[0, 2, 1, "", "declare_state_and_memory"], [0, 2, 1, "", "generate_code"]], "ffcv.fields.decoders.CenterCropRGBImageDecoder": [[0, 3, 1, "", "get_crop_generator"]], "ffcv.fields.decoders.FloatDecoder": [[0, 4, 1, "", "dtype"]], "ffcv.fields.decoders.IntDecoder": [[0, 4, 1, "", "dtype"]], "ffcv.fields.decoders.NDArrayDecoder": [[0, 2, 1, "", "declare_state_and_memory"], [0, 2, 1, "", "generate_code"]], "ffcv.fields.decoders.RandomResizedCropRGBImageDecoder": [[0, 3, 1, "", "get_crop_generator"]], "ffcv.fields.decoders.SimpleRGBImageDecoder": [[0, 2, 1, "", "declare_state_and_memory"], [0, 2, 1, "", "generate_code"]], "ffcv.loader": [[2, 1, 1, "", "Loader"], [2, 1, 1, "", "OrderOption"]], "ffcv.loader.Loader": [[2, 2, 1, "", "filter"], [2, 2, 1, "", "generate_code"], [2, 2, 1, "", "generate_function_call"], [2, 2, 1, "", "generate_stage_code"], [2, 2, 1, "", "next_traversal_order"]], "ffcv.loader.OrderOption": [[2, 4, 1, "", "QUASI_RANDOM"], [2, 4, 1, "", "RANDOM"], [2, 4, 1, "", "SEQUENTIAL"]], "ffcv.transforms": [[3, 1, 1, "", "Convert"], [3, 1, 1, "", "Cutout"], [3, 1, 1, "", "ImageMixup"], [3, 1, 1, "", "LabelMixup"], [3, 1, 1, "", "MixupToOneHot"], [3, 1, 1, "", "ModuleWrapper"], [3, 1, 1, "", "NormalizeImage"], [3, 1, 1, "", "Poison"], [3, 1, 1, "", "RandomHorizontalFlip"], [3, 1, 1, "", "RandomResizedCrop"], [3, 1, 1, "", "RandomTranslate"], [3, 1, 1, "", "ReplaceLabel"], [3, 1, 1, "", "Squeeze"], [3, 1, 1, "", "ToDevice"], [3, 1, 1, "", "ToTensor"], [3, 1, 1, "", "ToTorchImage"], [3, 1, 1, "", "View"]], "ffcv.transforms.Convert": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.Cutout": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.ImageMixup": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.LabelMixup": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.MixupToOneHot": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.ModuleWrapper": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.NormalizeImage": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"], [3, 2, 1, "", "generate_code_cpu"], [3, 2, 1, "", "generate_code_gpu"]], "ffcv.transforms.Poison": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.RandomHorizontalFlip": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.RandomResizedCrop": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.RandomTranslate": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.ReplaceLabel": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.Squeeze": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.ToDevice": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.ToTensor": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.ToTorchImage": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.transforms.View": [[3, 2, 1, "", "declare_state_and_memory"], [3, 2, 1, "", "generate_code"]], "ffcv.writer": [[4, 1, 1, "", "DatasetWriter"], [4, 5, 1, "", "count_samples_in_shard"], [4, 5, 1, "", "from_shard"], [4, 5, 1, "", "handle_sample"], [4, 5, 1, "", "worker_job_indexed_dataset"], [4, 5, 1, "", "worker_job_webdataset"]], "ffcv.writer.DatasetWriter": [[4, 2, 1, "", "finalize"], [4, 2, 1, "", "from_indexed_dataset"], [4, 2, 1, "", "from_webdataset"], [4, 2, 1, "", "prepare"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"ffcv": [0, 1, 2, 3, 4, 10, 13, 15, 16, 20, 21], "field": [0, 1, 21], "decod": [0, 20], "modul": [0, 1, 2, 3, 4], "loader": [2, 10], "transform": [3, 11, 14, 16], "writer": 4, "api": [5, 15], "refer": [5, 15], "get": 6, "start": 6, "imagenet": [7, 12], "benchmark": 7, "dataset": [7, 10, 13, 16, 17, 20, 21], "size": 7, "data": [7, 10, 20], "load": 7, "result": 7, "end": 7, "train": [7, 10, 12, 17], "The": 8, "bottleneck": 8, "doctor": 8, "disk": 8, "read": 8, "cpu": 8, "gpu": [8, 17], "exampl": 9, "cifar": 10, "10": 10, "36": 10, "second": 10, "singl": 10, "a100": 10, "step": 10, "1": [10, 17], "creat": 10, "an": [10, 16], "compat": 10, "2": [10, 17], "3": 10, "setup": [10, 13], "model": [10, 17], "architectur": 10, "optim": 10, "paramet": 10, "4": 10, "evalu": 10, "wrap": 10, "up": [10, 13], "fast": [11, 12], "custom": [11, 14], "imag": [11, 20], "advanc": 11, "state": 11, "pre": 11, "alloc": 11, "memori": [11, 13], "implement": 11, "function": 11, "usag": 11, "more": [11, 13, 16], "inform": [11, 16], "about": 11, "larg": [13, 17], "scale": [13, 17], "linear": 13, "regress": 13, "gener": 13, "fake": 13, "basic": 13, "code": 13, "templat": 13, "naiv": 13, "approach": 13, "pytorch": 13, "tensordataset": 13, "speed": 13, "thing": 13, "less": 13, "indic": [14, 15], "welcom": 15, "": 15, "document": 15, "introduct": 15, "tutori": 15, "featur": 15, "citat": 15, "contributor": 15, "tabl": 15, "make": 16, "dataload": 16, "order": 16, "pipelin": 16, "put": 16, "togeth": 16, "other": 16, "option": [16, 20], "tune": 17, "guid": [17, 18], "scenario": 17, "small": 17, "multi": 17, "multipl": 17, "grid": 17, "search": 17, "per": 17, "extrem": 17, "perform": 18, "quickstart": 19, "work": 20, "write": [20, 21], "format": 21, "index": 21, "webdataset": 21}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"ffcv.fields.decoders module": [[0, "module-ffcv.fields.decoders"]], "ffcv.fields module": [[1, "ffcv-fields-module"]], "ffcv.loader module": [[2, "module-ffcv.loader"]], "ffcv.transforms module": [[3, "module-ffcv.transforms"]], "ffcv.writer module": [[4, "module-ffcv.writer"]], "API Reference": [[5, "api-reference"], [15, "api-reference"]], "Getting started": [[6, "getting-started"]], "ImageNet Benchmarks": [[7, "imagenet-benchmarks"]], "Dataset sizes": [[7, "dataset-sizes"], [7, "id4"]], "Data loading": [[7, "data-loading"]], "Data loading benchmark results (ImageNet)": [[7, "id5"]], "End-to-end training": [[7, "end-to-end-training"]], "The Bottleneck Doctor": [[8, "the-bottleneck-doctor"]], "Disk-read bottlenecks": [[8, "disk-read-bottlenecks"]], "CPU bottlenecks": [[8, "cpu-bottlenecks"]], "GPU bottlenecks": [[8, "gpu-bottlenecks"]], "Examples": [[9, "examples"]], "Training CIFAR-10 in 36 seconds on a single A100": [[10, "training-cifar-10-in-36-seconds-on-a-single-a100"]], "Step 1: Create an FFCV-compatible CIFAR-10 dataset": [[10, "step-1-create-an-ffcv-compatible-cifar-10-dataset"]], "Step 2: Create data loaders": [[10, "step-2-create-data-loaders"]], "Step 3: Setup model architecture and optimization parameters": [[10, "step-3-setup-model-architecture-and-optimization-parameters"]], "Step 4: Train and evaluate the model": [[10, "step-4-train-and-evaluate-the-model"]], "Wrapping up": [[10, "wrapping-up"]], "Fast custom image transforms": [[11, "fast-custom-image-transforms"]], "Advancing state and pre-allocating memory": [[11, "advancing-state-and-pre-allocating-memory"]], "Implementing the transform function": [[11, "implementing-the-transform-function"]], "Advanced usage: more information about state": [[11, "advanced-usage-more-information-about-state"]], "ImageNet Fast Training": [[12, "imagenet-fast-training"]], "Large-Scale Linear Regression": [[13, "large-scale-linear-regression"]], "Setup: Generating a fake dataset": [[13, "setup-generating-a-fake-dataset"]], "Basic code template": [[13, "basic-code-template"]], "Naive approach: PyTorch TensorDataset": [[13, "naive-approach-pytorch-tensordataset"]], "Speeding things up with FFCV": [[13, "speeding-things-up-with-ffcv"]], "More speed, less memory": [[13, "more-speed-less-memory"]], "Custom transforms with indices": [[14, "custom-transforms-with-indices"]], "Welcome to FFCV\u2019s documentation!": [[15, "welcome-to-ffcv-s-documentation"]], "Introduction": [[15, "introduction"]], "Tutorials": [[15, "tutorials"]], "Features": [[15, "features"]], "Citation": [[15, "citation"]], "Contributors": [[15, "contributors"]], "Indices and tables": [[15, "indices-and-tables"]], "Making an FFCV dataloader": [[16, "making-an-ffcv-dataloader"]], "Dataset ordering": [[16, "dataset-ordering"]], "Pipelines": [[16, "pipelines"]], "Transforms": [[16, "transforms"]], "Putting together": [[16, "putting-together"]], "Other options": [[16, "other-options"]], "More information": [[16, "more-information"]], "Tuning Guide": [[17, "tuning-guide"]], "Scenario: Small dataset": [[17, "scenario-small-dataset"]], "Scenario: Large scale datasets": [[17, "scenario-large-scale-datasets"]], "Scenario: Multi-GPU training (1 model, multiple GPUs)": [[17, "scenario-multi-gpu-training-1-model-multiple-gpus"]], "Scenario: Grid search (1 model per GPU)": [[17, "scenario-grid-search-1-model-per-gpu"]], "Scenario: Extreme grid search (2+ models per GPU)": [[17, "scenario-extreme-grid-search-2-models-per-gpu"]], "Performance Guide": [[18, "performance-guide"]], "Quickstart": [[19, "quickstart"]], "Working with Image Data in FFCV": [[20, "working-with-image-data-in-ffcv"]], "Writing image datasets": [[20, "writing-image-datasets"]], "Decoding options": [[20, "decoding-options"]], "Writing a dataset to FFCV format": [[21, "writing-a-dataset-to-ffcv-format"]], "Indexable Dataset": [[21, "indexable-dataset"]], "Webdataset": [[21, "webdataset"]], "Fields": [[21, "fields"]]}, "indexentries": {"bytesdecoder (class in ffcv.fields.decoders)": [[0, "ffcv.fields.decoders.BytesDecoder"]], "centercroprgbimagedecoder (class in ffcv.fields.decoders)": [[0, "ffcv.fields.decoders.CenterCropRGBImageDecoder"]], "floatdecoder (class in ffcv.fields.decoders)": [[0, "ffcv.fields.decoders.FloatDecoder"]], "intdecoder (class in ffcv.fields.decoders)": [[0, "ffcv.fields.decoders.IntDecoder"]], "ndarraydecoder (class in ffcv.fields.decoders)": [[0, "ffcv.fields.decoders.NDArrayDecoder"]], "randomresizedcroprgbimagedecoder (class in ffcv.fields.decoders)": [[0, "ffcv.fields.decoders.RandomResizedCropRGBImageDecoder"]], "simplergbimagedecoder (class in ffcv.fields.decoders)": [[0, "ffcv.fields.decoders.SimpleRGBImageDecoder"]], "declare_state_and_memory() (ffcv.fields.decoders.bytesdecoder method)": [[0, "ffcv.fields.decoders.BytesDecoder.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.fields.decoders.ndarraydecoder method)": [[0, "ffcv.fields.decoders.NDArrayDecoder.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.fields.decoders.simplergbimagedecoder method)": [[0, "ffcv.fields.decoders.SimpleRGBImageDecoder.declare_state_and_memory"]], "dtype (ffcv.fields.decoders.floatdecoder attribute)": [[0, "ffcv.fields.decoders.FloatDecoder.dtype"]], "dtype (ffcv.fields.decoders.intdecoder attribute)": [[0, "ffcv.fields.decoders.IntDecoder.dtype"]], "ffcv.fields.decoders": [[0, "module-ffcv.fields.decoders"]], "generate_code() (ffcv.fields.decoders.bytesdecoder method)": [[0, "ffcv.fields.decoders.BytesDecoder.generate_code"]], "generate_code() (ffcv.fields.decoders.ndarraydecoder method)": [[0, "ffcv.fields.decoders.NDArrayDecoder.generate_code"]], "generate_code() (ffcv.fields.decoders.simplergbimagedecoder method)": [[0, "ffcv.fields.decoders.SimpleRGBImageDecoder.generate_code"]], "get_crop_generator (ffcv.fields.decoders.centercroprgbimagedecoder property)": [[0, "ffcv.fields.decoders.CenterCropRGBImageDecoder.get_crop_generator"]], "get_crop_generator (ffcv.fields.decoders.randomresizedcroprgbimagedecoder property)": [[0, "ffcv.fields.decoders.RandomResizedCropRGBImageDecoder.get_crop_generator"]], "module": [[0, "module-ffcv.fields.decoders"], [1, "module-ffcv.fields"], [2, "module-ffcv.loader"], [3, "module-ffcv.transforms"], [4, "module-ffcv.writer"]], "bytesfield (class in ffcv.fields)": [[1, "ffcv.fields.BytesField"]], "field (class in ffcv.fields)": [[1, "ffcv.fields.Field"]], "floatfield (class in ffcv.fields)": [[1, "ffcv.fields.FloatField"]], "intfield (class in ffcv.fields)": [[1, "ffcv.fields.IntField"]], "jsonfield (class in ffcv.fields)": [[1, "ffcv.fields.JSONField"]], "ndarrayfield (class in ffcv.fields)": [[1, "ffcv.fields.NDArrayField"]], "rgbimagefield (class in ffcv.fields)": [[1, "ffcv.fields.RGBImageField"]], "encode() (ffcv.fields.bytesfield method)": [[1, "ffcv.fields.BytesField.encode"]], "encode() (ffcv.fields.field method)": [[1, "ffcv.fields.Field.encode"]], "encode() (ffcv.fields.floatfield method)": [[1, "ffcv.fields.FloatField.encode"]], "encode() (ffcv.fields.intfield method)": [[1, "ffcv.fields.IntField.encode"]], "encode() (ffcv.fields.jsonfield method)": [[1, "ffcv.fields.JSONField.encode"]], "encode() (ffcv.fields.ndarrayfield method)": [[1, "ffcv.fields.NDArrayField.encode"]], "encode() (ffcv.fields.rgbimagefield method)": [[1, "ffcv.fields.RGBImageField.encode"]], "ffcv.fields": [[1, "module-ffcv.fields"]], "from_binary() (ffcv.fields.bytesfield static method)": [[1, "ffcv.fields.BytesField.from_binary"]], "from_binary() (ffcv.fields.field static method)": [[1, "ffcv.fields.Field.from_binary"]], "from_binary() (ffcv.fields.floatfield static method)": [[1, "ffcv.fields.FloatField.from_binary"]], "from_binary() (ffcv.fields.intfield static method)": [[1, "ffcv.fields.IntField.from_binary"]], "from_binary() (ffcv.fields.ndarrayfield static method)": [[1, "ffcv.fields.NDArrayField.from_binary"]], "from_binary() (ffcv.fields.rgbimagefield static method)": [[1, "ffcv.fields.RGBImageField.from_binary"]], "get_decoder_class() (ffcv.fields.bytesfield method)": [[1, "ffcv.fields.BytesField.get_decoder_class"]], "get_decoder_class() (ffcv.fields.field method)": [[1, "ffcv.fields.Field.get_decoder_class"]], "get_decoder_class() (ffcv.fields.floatfield method)": [[1, "ffcv.fields.FloatField.get_decoder_class"]], "get_decoder_class() (ffcv.fields.intfield method)": [[1, "ffcv.fields.IntField.get_decoder_class"]], "get_decoder_class() (ffcv.fields.ndarrayfield method)": [[1, "ffcv.fields.NDArrayField.get_decoder_class"]], "get_decoder_class() (ffcv.fields.rgbimagefield method)": [[1, "ffcv.fields.RGBImageField.get_decoder_class"]], "metadata_type (ffcv.fields.bytesfield property)": [[1, "ffcv.fields.BytesField.metadata_type"]], "metadata_type (ffcv.fields.field property)": [[1, "ffcv.fields.Field.metadata_type"]], "metadata_type (ffcv.fields.floatfield property)": [[1, "ffcv.fields.FloatField.metadata_type"]], "metadata_type (ffcv.fields.intfield property)": [[1, "ffcv.fields.IntField.metadata_type"]], "metadata_type (ffcv.fields.jsonfield property)": [[1, "ffcv.fields.JSONField.metadata_type"]], "metadata_type (ffcv.fields.ndarrayfield property)": [[1, "ffcv.fields.NDArrayField.metadata_type"]], "metadata_type (ffcv.fields.rgbimagefield property)": [[1, "ffcv.fields.RGBImageField.metadata_type"]], "to_binary() (ffcv.fields.bytesfield method)": [[1, "ffcv.fields.BytesField.to_binary"]], "to_binary() (ffcv.fields.field method)": [[1, "ffcv.fields.Field.to_binary"]], "to_binary() (ffcv.fields.floatfield method)": [[1, "ffcv.fields.FloatField.to_binary"]], "to_binary() (ffcv.fields.intfield method)": [[1, "ffcv.fields.IntField.to_binary"]], "to_binary() (ffcv.fields.ndarrayfield method)": [[1, "ffcv.fields.NDArrayField.to_binary"]], "to_binary() (ffcv.fields.rgbimagefield method)": [[1, "ffcv.fields.RGBImageField.to_binary"]], "unpack() (ffcv.fields.jsonfield static method)": [[1, "ffcv.fields.JSONField.unpack"]], "loader (class in ffcv.loader)": [[2, "ffcv.loader.Loader"]], "orderoption (class in ffcv.loader)": [[2, "ffcv.loader.OrderOption"]], "quasi_random (ffcv.loader.orderoption attribute)": [[2, "ffcv.loader.OrderOption.QUASI_RANDOM"]], "random (ffcv.loader.orderoption attribute)": [[2, "ffcv.loader.OrderOption.RANDOM"]], "sequential (ffcv.loader.orderoption attribute)": [[2, "ffcv.loader.OrderOption.SEQUENTIAL"]], "ffcv.loader": [[2, "module-ffcv.loader"]], "filter() (ffcv.loader.loader method)": [[2, "ffcv.loader.Loader.filter"]], "generate_code() (ffcv.loader.loader method)": [[2, "ffcv.loader.Loader.generate_code"]], "generate_function_call() (ffcv.loader.loader method)": [[2, "ffcv.loader.Loader.generate_function_call"]], "generate_stage_code() (ffcv.loader.loader method)": [[2, "ffcv.loader.Loader.generate_stage_code"]], "next_traversal_order() (ffcv.loader.loader method)": [[2, "ffcv.loader.Loader.next_traversal_order"]], "convert (class in ffcv.transforms)": [[3, "ffcv.transforms.Convert"]], "cutout (class in ffcv.transforms)": [[3, "ffcv.transforms.Cutout"]], "imagemixup (class in ffcv.transforms)": [[3, "ffcv.transforms.ImageMixup"]], "labelmixup (class in ffcv.transforms)": [[3, "ffcv.transforms.LabelMixup"]], "mixuptoonehot (class in ffcv.transforms)": [[3, "ffcv.transforms.MixupToOneHot"]], "modulewrapper (class in ffcv.transforms)": [[3, "ffcv.transforms.ModuleWrapper"]], "normalizeimage (class in ffcv.transforms)": [[3, "ffcv.transforms.NormalizeImage"]], "poison (class in ffcv.transforms)": [[3, "ffcv.transforms.Poison"]], "randomhorizontalflip (class in ffcv.transforms)": [[3, "ffcv.transforms.RandomHorizontalFlip"]], "randomresizedcrop (class in ffcv.transforms)": [[3, "ffcv.transforms.RandomResizedCrop"]], "randomtranslate (class in ffcv.transforms)": [[3, "ffcv.transforms.RandomTranslate"]], "replacelabel (class in ffcv.transforms)": [[3, "ffcv.transforms.ReplaceLabel"]], "squeeze (class in ffcv.transforms)": [[3, "ffcv.transforms.Squeeze"]], "todevice (class in ffcv.transforms)": [[3, "ffcv.transforms.ToDevice"]], "totensor (class in ffcv.transforms)": [[3, "ffcv.transforms.ToTensor"]], "totorchimage (class in ffcv.transforms)": [[3, "ffcv.transforms.ToTorchImage"]], "view (class in ffcv.transforms)": [[3, "ffcv.transforms.View"]], "declare_state_and_memory() (ffcv.transforms.convert method)": [[3, "ffcv.transforms.Convert.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.cutout method)": [[3, "ffcv.transforms.Cutout.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.imagemixup method)": [[3, "ffcv.transforms.ImageMixup.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.labelmixup method)": [[3, "ffcv.transforms.LabelMixup.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.mixuptoonehot method)": [[3, "ffcv.transforms.MixupToOneHot.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.modulewrapper method)": [[3, "ffcv.transforms.ModuleWrapper.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.normalizeimage method)": [[3, "ffcv.transforms.NormalizeImage.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.poison method)": [[3, "ffcv.transforms.Poison.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.randomhorizontalflip method)": [[3, "ffcv.transforms.RandomHorizontalFlip.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.randomresizedcrop method)": [[3, "ffcv.transforms.RandomResizedCrop.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.randomtranslate method)": [[3, "ffcv.transforms.RandomTranslate.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.replacelabel method)": [[3, "ffcv.transforms.ReplaceLabel.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.squeeze method)": [[3, "ffcv.transforms.Squeeze.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.todevice method)": [[3, "ffcv.transforms.ToDevice.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.totensor method)": [[3, "ffcv.transforms.ToTensor.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.totorchimage method)": [[3, "ffcv.transforms.ToTorchImage.declare_state_and_memory"]], "declare_state_and_memory() (ffcv.transforms.view method)": [[3, "ffcv.transforms.View.declare_state_and_memory"]], "ffcv.transforms": [[3, "module-ffcv.transforms"]], "generate_code() (ffcv.transforms.convert method)": [[3, "ffcv.transforms.Convert.generate_code"]], "generate_code() (ffcv.transforms.cutout method)": [[3, "ffcv.transforms.Cutout.generate_code"]], "generate_code() (ffcv.transforms.imagemixup method)": [[3, "ffcv.transforms.ImageMixup.generate_code"]], "generate_code() (ffcv.transforms.labelmixup method)": [[3, "ffcv.transforms.LabelMixup.generate_code"]], "generate_code() (ffcv.transforms.mixuptoonehot method)": [[3, "ffcv.transforms.MixupToOneHot.generate_code"]], "generate_code() (ffcv.transforms.modulewrapper method)": [[3, "ffcv.transforms.ModuleWrapper.generate_code"]], "generate_code() (ffcv.transforms.normalizeimage method)": [[3, "ffcv.transforms.NormalizeImage.generate_code"]], "generate_code() (ffcv.transforms.poison method)": [[3, "ffcv.transforms.Poison.generate_code"]], "generate_code() (ffcv.transforms.randomhorizontalflip method)": [[3, "ffcv.transforms.RandomHorizontalFlip.generate_code"]], "generate_code() (ffcv.transforms.randomresizedcrop method)": [[3, "ffcv.transforms.RandomResizedCrop.generate_code"]], "generate_code() (ffcv.transforms.randomtranslate method)": [[3, "ffcv.transforms.RandomTranslate.generate_code"]], "generate_code() (ffcv.transforms.replacelabel method)": [[3, "ffcv.transforms.ReplaceLabel.generate_code"]], "generate_code() (ffcv.transforms.squeeze method)": [[3, "ffcv.transforms.Squeeze.generate_code"]], "generate_code() (ffcv.transforms.todevice method)": [[3, "ffcv.transforms.ToDevice.generate_code"]], "generate_code() (ffcv.transforms.totensor method)": [[3, "ffcv.transforms.ToTensor.generate_code"]], "generate_code() (ffcv.transforms.totorchimage method)": [[3, "ffcv.transforms.ToTorchImage.generate_code"]], "generate_code() (ffcv.transforms.view method)": [[3, "ffcv.transforms.View.generate_code"]], "generate_code_cpu() (ffcv.transforms.normalizeimage method)": [[3, "ffcv.transforms.NormalizeImage.generate_code_cpu"]], "generate_code_gpu() (ffcv.transforms.normalizeimage method)": [[3, "ffcv.transforms.NormalizeImage.generate_code_gpu"]], "datasetwriter (class in ffcv.writer)": [[4, "ffcv.writer.DatasetWriter"]], "count_samples_in_shard() (in module ffcv.writer)": [[4, "ffcv.writer.count_samples_in_shard"]], "ffcv.writer": [[4, "module-ffcv.writer"]], "finalize() (ffcv.writer.datasetwriter method)": [[4, "ffcv.writer.DatasetWriter.finalize"]], "from_indexed_dataset() (ffcv.writer.datasetwriter method)": [[4, "ffcv.writer.DatasetWriter.from_indexed_dataset"]], "from_shard() (in module ffcv.writer)": [[4, "ffcv.writer.from_shard"]], "from_webdataset() (ffcv.writer.datasetwriter method)": [[4, "ffcv.writer.DatasetWriter.from_webdataset"]], "handle_sample() (in module ffcv.writer)": [[4, "ffcv.writer.handle_sample"]], "prepare() (ffcv.writer.datasetwriter method)": [[4, "ffcv.writer.DatasetWriter.prepare"]], "worker_job_indexed_dataset() (in module ffcv.writer)": [[4, "ffcv.writer.worker_job_indexed_dataset"]], "worker_job_webdataset() (in module ffcv.writer)": [[4, "ffcv.writer.worker_job_webdataset"]]}})